name: 'Backport Action'
description: 'Automatically backport changes to specified branches based on PR labels'

inputs:
  github-token:
    description: 'GitHub token for authentication'
    default: ${{ github.token }}
  backports-url:
    description: 'URL to fetch the backport branches configuration JSON'
    default: "https://storage.googleapis.com/artifacts-api/snapshots/branches.json"
  pr-number:
    description: 'PR number to use (needed for tests)'
    default: ${{ github.event.pull_request.number }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
      shell: bash

    - name: Fetch PR labels
      id: fetch-labels
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ inputs.pr-number }}
      run: |
        # Only fetch labels if no PR context is available
        if [ "${{ github.event_name }}" != "pull_request" ]; then
          echo "No PR context, fetching labels for PR #$PR_NUMBER"
          LABELS=$(curl -s -H "Authorization: token $GH_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/labels" | \
                 python -c "import json, sys; data=json.load(sys.stdin); print(json.dumps([{'name': label['name']} for label in data]))")
          echo "PR_LABELS=$LABELS" >> $GITHUB_ENV
          echo "Fetched labels: $LABELS"
        else
          echo "Using labels from PR context"
        fi
      shell: bash

    - name: Run backport script
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ inputs.pr-number }}
        REPOSITORY: ${{ github.repository }}
        PR_LABELS: ${{ toJSON(github.event.pull_request.labels) }}
        BACKPORTS_URL: ${{ inputs.backports-url }}
      run: python ${{ github.action_path }}/backport_script.py
      shell: bash
