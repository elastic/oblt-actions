name: test-kibana-docker-image

on:
  workflow_dispatch: ~
  push:
    paths:
      - '.github/workflows/test-kibana-docker-image.yml'
      - 'kibana-docker-image/**'

permissions:
  contents: read

jobs:
  test:
    name: kibana-${{ matrix.serverless && 'serverless' || 'cloud' }}-docker-image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - serverless: false
          # Serverless is not something we built anymore as part of the obs automation
          # but use the existing docker images generated by Kibana CI.
          # See https://github.com/elastic/kibana/pull/181851
          # - serverless: true
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          # This needs to be set to false.
          # See https://github.com/jlumbroso/free-disk-space/issues/12
          # TL;DR
          # Otherwise, the workflow is cancelled with an 143 exit code.
          swap-storage: false

      # IMPORTANT: the secrets below are managed through IASC (contact robots if you need further assistance)
      - name: Log in to the Elastic Container registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

      - uses: ./kibana-docker-image
        id: kibana-docker-image
        with:
          serverless: ${{ matrix.serverless }}

      - name: validate
        run: |
          echo "${STACK_VERSION:?}"
          echo "${GIT_COMMIT_SHA:?}"
          echo "${DOCKER_IMAGE_REF:?}"
          docker pull "${DOCKER_IMAGE_REF}"
        env:
          DOCKER_IMAGE_REF: ${{ steps.kibana-docker-image.outputs.kibana-docker-image }}
          GIT_COMMIT_SHA: ${{ steps.kibana-docker-image.outputs.kibana-commit-sha }}
          STACK_VERSION: ${{ steps.kibana-docker-image.outputs.kibana-stack-version }}
