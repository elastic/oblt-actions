name: test-buildkite-run

on:
  merge_group: ~
  workflow_dispatch: ~
  push:
    paths:
      - '.github/workflows/test-buildkite-run.yml'
      - 'buildkite/run/**'

permissions:
  contents: read

jobs:
  test:
    if: always()
    needs:
      - test-no-wait-for
      - test-wait-for
      - test-env-vars-unquoted
      - test-env-vars-quoted
      - test-env-vars-mixed
    runs-on: ubuntu-latest
    steps:
      - id: check
        uses: elastic/oblt-actions/check-dependent-jobs@v1
        with:
          jobs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.is-success }}

  test-no-wait-for:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ./buildkite/run
        with:
          pipeline: 'oblt-hello-world'
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: false

  test-wait-for:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: buildkite
        uses: ./buildkite/run
        with:
          pipeline: 'oblt-hello-world'
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: true

      - name: Assert is oblt-hello-world
        run: test "${{ steps.buildkite.outputs.pipeline }}" = "oblt-hello-world"

  test-env-vars-unquoted:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: buildkite
        uses: ./buildkite/run
        with:
          pipeline: 'oblt-hello-world'
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: true
          env-vars: |
            SNAPSHOT=false
            HELM_REPO_ENV=test

      - name: Assert pipeline name
        run: test "${{ steps.buildkite.outputs.pipeline }}" = "oblt-hello-world"

  test-env-vars-quoted:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: buildkite
        uses: ./buildkite/run
        with:
          pipeline: 'oblt-hello-world'
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: true
          env-vars: |
            SNAPSHOT="true"
            HELM_REPO_ENV="dev"

      - name: Assert pipeline name
        run: test "${{ steps.buildkite.outputs.pipeline }}" = "oblt-hello-world"

  test-env-vars-mixed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - id: buildkite
        uses: ./buildkite/run
        with:
          pipeline: 'oblt-hello-world'
          token: ${{ secrets.BUILDKITE_TOKEN }}
          wait-for: true
          env-vars: |
            SNAPSHOT="true"
            HELM_REPO_ENV=dev
            MESSAGE="Hello World"
            URL=https://example.com/path?param=value

      - name: Assert pipeline name
        run: test "${{ steps.buildkite.outputs.pipeline }}" = "oblt-hello-world"
