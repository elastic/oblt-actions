name: 'oblt-cli/cluster-create-custom'
description: 'Run the oblt-cli wrapper to create a custom cluster.'
inputs:
  template:
    description: 'The Oblt cluster template to use'
    required: true
  parameters:
    description: 'The Oblt cluster parameters to use in JSON format.'
    required: true
    default: '{}'
  github-token:
    description: 'The GitHub access token.'
    required: true
  cluster-name-prefix:
    description: 'Prefix to be prepended to the randomised cluster name'
    required: false
  cluster-name-suffix:
    description: 'Suffix to be appended to the randomised cluster name'
    required: false
  slack-channel:
    description: 'The slack channel to notify the status.'
    default: '#observablt-bots'
    required: false
  username:
    description: 'Username to show in the deployments with oblt-cli, format: [a-z0-9]'
    default: 'obltmachine'
    required: false
  gitops:
    description: 'Whether to provide the GitOps metadata to the oblt-cli'
    default: false
    required: false
  dry-run:
    description: 'Whether to dryRun'
    default: false
    required: false
  skip-random-name:
    description: 'Whether to deploy a cluster with a random name'
    default: false
    required: false
  wait:
    description: 'it waits N minutes for the operation to finish. (default 0 if no wait time is provided)'
    default: '0'
    required: false

outputs:
  cluster-name:
    description: 'The cluster name that has been created'
    value: ${{ steps.info.outputs.cluster-name }}

runs:
  using: "composite"
  steps:
    - name: Configure oblt-cli flags
      id: flags
      uses: actions/github-script@v8
      env:
        template: ${{ inputs.template }}
        cluster_name_prefix: ${{ inputs.cluster-name-prefix }}
        cluster_name_suffix: ${{ inputs.cluster-name-suffix }}
        dry_run: ${{ inputs.dry-run }}
        gitops: ${{ inputs.gitops }}
        input_parameters: ${{ inputs.parameters }}
        skip_random_name: ${{ inputs.skip-random-name }}
        wait_time: ${{ inputs.wait }}
      with:
        script: |
          const {
            template,
            cluster_name_prefix,
            cluster_name_suffix,
            dry_run,
            gitops,
            input_parameters,
            skip_random_name,
            wait_time,
            RUNNER_TEMP
          } = process.env
          let parameters = {}
          if (gitops === 'true') {
            parameters.GitOps = 'true'
            parameters.GitHubRepository = `${context.repo.owner}/${context.repo.repo}`
            if (context.eventName === 'issues' && context.issue.number) {
              parameters.GitHubIssue = context.issue.number
            } else {
              parameters.GitHubPullRequest = context.issue.number
            }
          }
          parameters.EphemeralCluster = 'true'
          parameters = { ...parameters, ...JSON.parse(input_parameters) }
          core.setOutput('PARAMETERS', `--parameters='${JSON.stringify(parameters)}'`)


          if (template) {
            core.setOutput('TEMPLATE', `--template=${template}`)
          }

          if (cluster_name_prefix) {
            core.setOutput('CLUSTER_NAME_PREFIX', `--cluster-name-prefix=${cluster_name_prefix}`)
          }

          if (cluster_name_suffix) {
            core.setOutput('CLUSTER_NAME_SUFFIX', `--cluster-name-suffix=${cluster_name_suffix}`)
          }

          if (dry_run !== 'false') {
            core.setOutput('DRY_RUN', '--dry-run')
          }

          if (skip_random_name === 'true') {
            core.setOutput('SKIP_RANDOM_NAME', '--skip-random-name')
          }

          cluster_json_file = `${RUNNER_TEMP}/cluster.json`
          core.setOutput('cluster-json-file', `${cluster_json_file}`)
          if (wait_time) {
            waitFlags = []
            waitFlags.push(`--wait=${wait_time}`)
            waitFlags.push(`--output-file=${cluster_json_file}`)
            core.setOutput('WAIT', waitFlags.join(' '))
          }

    - uses: elastic/oblt-actions/oblt-cli/setup@v1.31.0
      with:
        github-token: ${{ inputs.github-token }}
        slack-channel: ${{ inputs.slack-channel }}
        username: ${{ inputs.username }}

    - run: |
        oblt-cli cluster create custom \
            ${{ steps.flags.outputs.TEMPLATE }} \
            ${{ steps.flags.outputs.DRY_RUN }} \
            ${{ steps.flags.outputs.CLUSTER_NAME_PREFIX }} \
            ${{ steps.flags.outputs.CLUSTER_NAME_SUFFIX }} \
            ${{ steps.flags.outputs.PARAMETERS }} \
            ${{ steps.flags.outputs.SKIP_RANDOM_NAME }} \
            ${{ steps.flags.outputs.WAIT }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - run: |
        cluster_name=""
        if [ -f "${cluster_json}" ]; then
          cluster_name=$(jq -r '.ClusterName' < "${cluster_json}")
        fi
        echo "cluster-name=${cluster_name}" >> "$GITHUB_OUTPUT"
      id: info
      shell: bash
      env:
        cluster_json: "${{ steps.flags.outputs.cluster-json-file }}"
