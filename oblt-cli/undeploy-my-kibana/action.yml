name: 'oblt-cli/undeploy-my-kibana'
description: 'Undeploy my kibana given the Pull Request'
inputs:
  pull-request:
    description: 'The GitHub Pull Request ID'
    default: ${{ github.event.pull_request.number }}
  repository:
    description: 'The GitHub repository'
    default: ${{ github.repository }}
  github-token:
    description: 'The GitHub Personal Access Token.'
    required: false
  github-app-id:
    description: 'The GitHub App ID to generate the ephemeral token.'
    required: false
  github-app-private-key:
    description: 'The GitHub App Private Key to generate the ephemeral token.'
    required: false

outputs:
  issue:
    description: 'The GitHub issue that has been created to destroy the cluster'
    value: ${{ steps.undeploy-my-kibana.outputs.issue }}

runs:
  using: "composite"
  steps:

    - if: ${{ (inputs.github-token == '' && inputs.github-app-id == '' && inputs.github-app-private-key == '') || (inputs.github-token != '' && inputs.github-app-id != '' && inputs.github-app-private-key != '') }}
      name: Validate input parameters
      run: echo "use either github-token or github-app-id and github-app-private-key" && exit 1
      shell: bash

    - name: Get token
      if: ${{ inputs.github-token == '' }}
      id: get_token
      uses: actions/create-github-app-token@v2
      with:
        app-id: ${{ inputs.github-app-id }}
        private-key: ${{ inputs.github-app-private-key }}
        owner: elastic
        permission-contents: read
        permission-issues: write
        repositories: |
          observability-test-environments

    - if: ${{ inputs.github-token == '' }}
      name: If ephemeral GitHub token app generated
      run: echo "GH_TOKEN=${{ steps.get_token.outputs.token }}" >> "$GITHUB_ENV"
      shell: bash

    - if: ${{ inputs.github-token != '' }}
      name: If GitHub token provided
      run: echo "GH_TOKEN=${GH_TOKEN}" >> "$GITHUB_ENV"
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      shell: bash

    - name: Gather PR Owner
      run: |-
        PR_AUTHOR=$(gh pr view "${PR}" --repo "${REPO}" --json author --jq .author.login)
        echo "PR_AUTHOR=${PR_AUTHOR}" >> $GITHUB_ENV
      env:
        PR: ${{ inputs.pull-request }}
        REPO: ${{ inputs.repository }}
      shell: bash

    - name: Create GitHub issue body
      id: undeploy-my-kibana
      run: |-
        cat <<EOT >> .body-content
        ### Kibana pull request

        ${{ env.PR }}

        ### Further details

        Caused by @${{ env.PR_AUTHOR }} in https://github.com/${{ env.REPO }}/pull/${{ env.PR }} via this [GitHub workflow build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }})
        EOT

        gh issue \
          create \
          --label 'destroy-custom-kibana-serverless' \
          --title "[Undeploy Kibana] ${{ env.REPO }}@pr-${{ env.PR }}" \
          --body-file .body-content \
          --repo elastic/observability-test-environments | tee .issue
        echo "issue=$(cat .issue)" >> "$GITHUB_OUTPUT"

        rm .issue .body-content || true
      env:
        PR: ${{ inputs.pull-request }}
        REPO: ${{ inputs.repository }}
      shell: bash
